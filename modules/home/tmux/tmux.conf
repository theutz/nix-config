# Tmux Configuration

# Icons »»»
set -g @session-icon "󰋁 "
set -g @window-icon " "
set -g @pane-icon " "
set -g @dir-icon " "
set -g @cmd-icon " "
set -g @open-icon "#[reverse] "
set -g @close-icon " #[noreverse]"
set -gF @sep-icon " #[push-default fg=#{E:@inactive}]󰇙#[default pop-default] "
set -g @label-icon "󰌖 "
set -g @win-flags " #{?#{m:*M*,#F},󰍒 ,}"
set -ga @win-flags "#{?#{m:*Z*,#F},󰁌 ,}"
set -ga @win-flags "#{?#{m:*\\**,#F},󰛄 ,}"
set -ga @win-flags "#{?#{m:*-*,#F},󱞥 ,}"
set -ga @win-flags "#{?#{m:*##*,#F},󰶹 ,}"
set -ga @win-flags "#{?#{m:*!*,#F}, ,}"
set -ga @win-flags "#{?#{m:*~*,#F},󰒲 ,}"
#  «««

# Colors »»»
set -g @bg "terminal"
set -g @fg "colour15"
set -g @success "colour2"
set -g @warning "colour3"
set -g @error "colour1"
set -g @inactive "colour0"

set -g @active "colour13"
set -g @session "colour13"
set -g @window "colour4"
set -g @pane "colour5"

#  «««

# Options »»»
set -g @seg-session "#[fg=#{E:@session}]#{@open-icon}#{E:@session-icon} #S#{?session_alerts, #{session_alerts},}#{E:@close-icon}"
set -g @seg-pane-title "#{E:@pane-icon} #P #{?#{==:#{pane_title},#{host}},#{E:@cmd-icon}#[italics]#{pane_current_command}#[noitalics],#{E:@label-icon}#{pane_title}}"
set -g @seg-pane "#{?pane_active,#[fg=#{E:@pane}]#{@open-icon},#{?pane_last,#[fg=#{E:@pane}],#[fg=#{E:@inactive} bold]}}#{E:@seg-pane-title}#{?pane_active,#{E:@close-icon},}"
set -g @seg-panes "#{P:#[range=pane|#{pane_id}]#{E:@seg-pane}#[range=right default]#{?#{==:#{window_panes},#{pane_index}},,#{E:@sep-icon}}}"
set -g @seg-stats "#{E:@seg-stats-session}#{E:@sep-icon}#{E:@seg-stats-window}#{E:@sep-icon}#{E:@seg-stats-pane}#{E:@sep-icon}#{E:@seg-stats-address}"
set -g @seg-stats-pane "#[fg=#{E:@pane}]#{E:@pane-icon} #{pane_id}"
set -g @seg-stats-window "#[fg=#{E:@window}]#{E:@window-icon} #{window_id}#[default]"
set -g @seg-stats-session "#[fg=#{E:@session}]#{E:@session-icon} #{session_id}#[default]"
set -g @seg-stats-address "#[fg=#{E:@pane}]󰓾 #{session_name}:#{window_index}.#{pane_index}#[default]"
set -g @seg-prefix-indicator "#{?client_prefix,#[fg=#{E:@error}]#{@open-icon}󰧹 <C-b>#{E:@close-icon}#[fg=default] ,}"
set -g @seg-info "#{E:@seg-info-user}#{E:@sep-icon}#{E:@seg-info-host}#{E:@sep-icon}#{E:@seg-info-date}#{E:@sep-icon}#{E:@seg-info-time}"
set -g @seg-info-host "#[fg=#{E:@success}] #[fg=default] #{host}"
set -g @seg-info-date "#[fg=#{E:@warning}]  #[fg=default]%Y-%m-%d"
set -g @seg-info-time "#[fg=#{E:@error}] #[fg=default] %H:%M"
set -g @seg-info-user "#[fg=#{E:@active}] #[fg=default] #{user}"
set -g allow-passthrough all
set -g allow-rename on
set -g automatic-rename on
set -g automatic-rename-format "#{?pane_in_mode,#{pane_mode},#{pane_current_command}}"
set -g base-index 1
set -g command-alias[100] vsp="split-window -h"
set -g command-alias[101] sp="split-window -v"
set -g command-alias[102] rsp="respawn-pane -k"
set -g command-alias[103] x="resize-pane -x"
set -g command-alias[104] y="resize-pane -y"
set -g command-alias[1450] is-pane-dead='run "[[ $(tmux display -p \"#{pane_dead}\") == 1 ]]"'
set -g command-alias[20548] mods='splitw -hbl 80 mods'
set -g command-alias[29547] man='splitw -hbl 80 ''; set -p remain-on-exit off; respawnp -k man tmux'
set -g copy-mode-current-match-style "#{E:copy-mode-match-style} blink"
set -g copy-mode-mark-style "bg=#{E:@active} fg=#{E:@inactive}"
set -g copy-mode-match-style "bg=#{E:@inactive} fg=#{E:@active} underscore"
set -g cursor-style blinking-block
set -g default-terminal "xterm-256color"
set -g destroy-unattached off
set -g detach-on-destroy off
set -gF display-panes-active-colour '#{E:@active}'
set -gF display-panes-color '#{E:@fg}'
set -g display-panes-time 3000
set -g menu-border-lines rounded
set -g menu-border-style "fg=#{E:@active}"
set -g menu-selected-style "fg=#{E:@inactive} bg=#{E:@active}"
set -g message-command-style "bg=#{E:@bg} fg=#{E:@active} italics"
set -g message-line 2
set -g message-style "#{E:message-command-style} reverse noitalics"
set -g mode-keys vi
set -g mode-style "bg=#{E:@active} fg=#{E:@inactive}"
set -g other-pane-width 80
set -g pane-active-border-style "fg=#{E:@active}"
set -g pane-base-index 1
set -g pane-border-format " #{?pane_active,,#[fg=terminal]}#{E:@pane-icon} #P #{E:@label-icon}#T#{?pane_current_path,#{E:@sep-icon}#{E:@dir-icon} #{s|$HOME|~|:pane_current_path},}#{E:@sep-icon}#{E:@cmd-icon}#{?#{pane_start_command},#{pane_start_command},#{pane_current_command}} "
set -g pane-border-indicators both
set -g pane-border-lines heavy
set -g pane-border-status top
set -g pane-border-style "fg=#{E:@inactive} bg=terminal"
set -g popup-border-lines rounded
set -g popup-border-style "fg=#{E:@active}"
set -g remain-on-exit on
set -g remain-on-exit-format "#[align=absolute-centre]#[fg=#{E:@error} reverse] 󰯈 Pane is dead#{?pane_dead_status, (status: #{pane_dead_status}),}#{?pane_dead_signal, (signal: #{pane_dead_signal}),}#[fill=#{E:@error}]"
set -g renumber-windows on
set -g set-titles on
set -g status 2
set -g status-format[1] " #{E:@seg-stats}#[align=absolute-centre]#{?pane_in_mode,#[fg=#{E:@active}]#[reverse] #{pane_mode} #[noreverse]#[default],}#[align=right]#{E:@seg-info} "
set -g status-interval 1
set -g status-justify absolute-centre
set -g status-keys vi
set -g status-left "#{E:@seg-session} #{E:@seg-prefix-indicator} "
set -g status-left-length 120
set -g status-left-style ""
set -g status-position bottom
set -g status-right "#{E:@seg-panes}"
set -g status-right-length 120
set -g status-style "bg=#{E:@bg} fg=#{E:@fg}"
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g window-active-style 'bg=terminal'
set -g window-status-current-format "#{@open-icon}#{E:@window-icon} #I #W#{E:@win-flags}#{E:@close-icon}"
set -g window-status-current-style "fg=#{E:@window}"
set -g window-status-format "#{E:@window-icon} #I #W#{E:@win-flags}"
set -g window-status-last-style "fg=#{E:@window} nobold"
set -gF window-status-separator "#{E:@sep-icon}"
set -g window-status-style "fg=#{E:@inactive} bold"
set -g window-style 'bg=#{E:@inactive}'
set -g default-terminal "${TERM}"
set -sa terminal-overrides ",xterm*:Tc"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

#  «««

# Hooks »»»
set-hook -p pane-died[10] {
  menu -M -T "What next?" -x "#{popup_pane_left}" -y "#{popup_pane_bottom}" \
    respawn r "respawn-pane -k" \
    "new command" n {
      command-prompt -I "respawn-pane #{pane_start_command}"
    } kill q "kill-pane" \
    "scroll up" C-u {
      copy-mode
      send-keys -X halfpage-up
    }
}
#  «««

# Bindings »»»

# mouse »»»
bind -n MouseDown1Status \
  display -d0 'line: #{mouse_status_line}, range: #{mouse_status_range}' \;\
  if -F '#{==:#{mouse_status_range},pane}' {
    run "tmux select-pane -t '#{pane_id}'"
  } {
    if -F '#{==:#{mouse_status_range},window}' { select-window -t = }
  }
#  «««

# root »»»
bind -n -N "Respawn dead pane" Enter \
  if -F '#{pane_dead}' respawn-pane { send-keys Enter }
#  «««

# prefix »»»
bind -N 'Attach via tmuxp' a \
  run 'zsh -ic "tx attach"'

bind -N 'Edit tmuxp template' C-a \
  run 'zsh -ic "tx edit"'

bind -N "Open mods menu" C-m \
  menu -T "mods..." -x "#{popup_pane_left}" -y "#{popup_pane_bottom}" \
    new n { splitw -hbl 82 mods } \
    continue c { splitw -hbl 82 "mods -C" } \
    last l { splitw -hbl 82 "mods -PS" }

bind -N "Customize mode" O customize-mode -Z

bind -N "Open rename menu" r \
  menu -T "Rename..." -x "#{popup_pane_left}" -y "#{popup_pane_bottom}" \
    session s {
      command-prompt -p "session name:" -I '#{session_name}' { rename-session '%%' }
    } window w {
      command-prompt -p "window name:" -I '#{window_name}' { rename-window '%%' }
    } pane p {
      command-prompt -p "pane title:" -I '#{pane_title}' { select-pane -T '%%' }
    }

bind -N "Open kill menu" x \
  menu -T "Kill..." -x "#{popup_pane_left}" -y "#{popup_pane_bottom}" \
    server S {
      kill-server
    } '' session s {
      kill-session
    } other-sessions C-s {
      kill-session -a
    } '' window w {
      kill-window
    } other-windows C-w {
      kill-window -a
    } respawn-window W {
      command-prompt -I "respawn-window -k '#{pane_start_command}'"
    } '' pane p {
      kill-pane
    } other-panes C-p {
      kill-pane -a
    } respawn-pane P {
      command-prompt -I "respawn-pane -k '#{pane_start_command}'"
    }

bind -N "Last pane" \; last-pane -Z

bind -N "List all keys" / list-keys

bind -N "Clear screen" C-l send 'C-l'
#  «««
#  «««

# vim: ft=tmux.tmpl fdm=marker fdl=0 fmr=\ »»»,\ ««« ts=2 sw=2 sts=2 et
